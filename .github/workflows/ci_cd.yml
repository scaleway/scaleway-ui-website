name: CI - CD

on:
  pull_request:
    types: ['opened', 'reopened', 'synchronize']
  push:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2.3.4
      - name: Use Node.js
        uses: actions/setup-node@v2.2.0
        with:
          node-version: 16
          cache: 'yarn'
      - run: yarn
      - run: yarn run lint
  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2.3.4
      - name: Use Node.js
        uses: actions/setup-node@v2.2.0
        with:
          node-version: 16
          cache: 'yarn'
      - run: yarn --pure-lockfile
      - run: yarn run build
        env:
          SENTRY_URL: ${{secrets.SENTRY_URL}}
          SENTRY_ORG: ${{secrets.SENTRY_ORG}}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          SENTRY_LOG_LEVEL: ${{ secrets.SENTRY_LOG_LEVEL }}
          SENTRY_DRY_RUN: ${{ secrets.SENTRY_DRY_RUN }}
      - run: yarn run export
      - name: Upload build
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: out

  deploy:
    needs: [ build ]
    env:
        SUFFIX: ui-scaleway
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v3.x
      - name: Export custom variables
        run: |
          SAFE_GITHUB_HEAD_REF_SLUG_URL=$(echo $GITHUB_HEAD_REF_SLUG_URL | rev | cut -c-37 | rev)
          ([[ $GITHUB_REF == 'refs/heads/main' ]] && echo "BRANCH_SLUG=main" || echo "BRANCH_SLUG=$SAFE_GITHUB_HEAD_REF_SLUG_URL") >> $GITHUB_ENV

      - name: Download build
        uses: actions/download-artifact@v2
        with:
          name: build
          path: out

      - name: Start deployment
        uses: bobheadxi/deployments@v0.6.0
        id: deployment
        with:
          step: start
          token: ${{ secrets.GITHUB_TOKEN }}
          env: ${{ env.BRANCH_SLUG }}
          ref: ${{ github.head_ref }}

      - name: S3 Create Bucket & Deploy
        uses: matthprost/s3-deploy-bucket-website-action@v0.0.30
        with:
          args: s3 mb s3://${{ env.BRANCH_SLUG }}
          S3_ACCESS_KEY: ${{ secrets.SCW_ACCESS_KEY }}
          S3_SECRET_KEY: ${{ secrets.SCW_SECRET_KEY }}
          S3_ENDPOINT: s3.fr-par.scw.cloud
          S3_REGION: fr-par
          BUCKET_NAME: ${{ env.BRANCH_SLUG }}-${{ env.SUFFIX }}
          SOURCE_DIRECTORY: ./out
          SYNC_ARGS: --delete --cache-control max-age=31536000
          COMPRESS_TOOL: gzip

      - name: Update deployment status
        uses: bobheadxi/deployments@v0.6.0
        with:
          step: finish
          token: ${{ secrets.GITHUB_TOKEN }}
          status: ${{ job.status }}
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
          env_url: https://${{ env.BRANCH_SLUG }}-${{ env.SUFFIX }}.s3-website.fr-par.scw.cloud
        if: always()

  lighthouse:
    runs-on: ubuntu-20.04
    env:
      SUFFIX: ui-scaleway
    needs: [ deploy ]
    steps:
      - uses: actions/checkout@v2
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v3.x
      - name: Export custom variables
        run: |
          SAFE_GITHUB_HEAD_REF_SLUG_URL=$(echo $GITHUB_HEAD_REF_SLUG_URL | rev | cut -c-37 | rev)
          ([[ $GITHUB_REF == 'refs/heads/main' ]] && echo "BRANCH_SLUG=main" || echo "BRANCH_SLUG=$SAFE_GITHUB_HEAD_REF_SLUG_URL") >> $GITHUB_ENV
      - name: Audit URLs using Lighthouse
        uses: treosh/lighthouse-ci-action@8.0.0
        with:
          urls: |
            https://${{ env.BRANCH_SLUG }}-${{ env.SUFFIX }}.s3-website.fr-par.scw.cloud
          serverBaseUrl: ${{ secrets.LHCI_SERVER_BASE_URL }}
          serverToken: ${{ secrets.LHCI_SERVER_TOKEN }}
          configPath: './.lighthouserc.json'


